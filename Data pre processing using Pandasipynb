{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9a314339",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv(\"https://raw.githubusercontent.com/harissriramoju/DataScience-Samples/master/gapminder.tsv\",sep='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c05b0cee",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1952</td>\n",
       "      <td>28.801</td>\n",
       "      <td>8425333</td>\n",
       "      <td>779.445314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "      <td>9240934</td>\n",
       "      <td>820.853030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1962</td>\n",
       "      <td>31.997</td>\n",
       "      <td>10267083</td>\n",
       "      <td>853.100710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "      <td>11537966</td>\n",
       "      <td>836.197138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1972</td>\n",
       "      <td>36.088</td>\n",
       "      <td>13079460</td>\n",
       "      <td>739.981106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1699</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1987</td>\n",
       "      <td>62.351</td>\n",
       "      <td>9216418</td>\n",
       "      <td>706.157306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1700</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1992</td>\n",
       "      <td>60.377</td>\n",
       "      <td>10704340</td>\n",
       "      <td>693.420786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1701</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1997</td>\n",
       "      <td>46.809</td>\n",
       "      <td>11404948</td>\n",
       "      <td>792.449960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1702</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2002</td>\n",
       "      <td>39.989</td>\n",
       "      <td>11926563</td>\n",
       "      <td>672.038623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1703</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2007</td>\n",
       "      <td>43.487</td>\n",
       "      <td>12311143</td>\n",
       "      <td>469.709298</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1704 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          country continent  year  lifeExp       pop   gdpPercap\n",
       "0     Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
       "1     Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2     Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3     Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4     Afghanistan      Asia  1972   36.088  13079460  739.981106\n",
       "...           ...       ...   ...      ...       ...         ...\n",
       "1699     Zimbabwe    Africa  1987   62.351   9216418  706.157306\n",
       "1700     Zimbabwe    Africa  1992   60.377  10704340  693.420786\n",
       "1701     Zimbabwe    Africa  1997   46.809  11404948  792.449960\n",
       "1702     Zimbabwe    Africa  2002   39.989  11926563  672.038623\n",
       "1703     Zimbabwe    Africa  2007   43.487  12311143  469.709298\n",
       "\n",
       "[1704 rows x 6 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "588d6053",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "country       object\n",
       "continent     object\n",
       "year           int64\n",
       "lifeExp      float64\n",
       "pop            int64\n",
       "gdpPercap    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "9dbf1097",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1557</th>\n",
       "      <td>Trinidad and Tobago</td>\n",
       "      <td>Americas</td>\n",
       "      <td>1997</td>\n",
       "      <td>69.465</td>\n",
       "      <td>1138101</td>\n",
       "      <td>8792.573126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>Congo, Rep.</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1962</td>\n",
       "      <td>48.435</td>\n",
       "      <td>1047924</td>\n",
       "      <td>2464.783157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>Ecuador</td>\n",
       "      <td>Americas</td>\n",
       "      <td>1977</td>\n",
       "      <td>61.310</td>\n",
       "      <td>7278866</td>\n",
       "      <td>6679.623260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>790</th>\n",
       "      <td>Jamaica</td>\n",
       "      <td>Americas</td>\n",
       "      <td>2002</td>\n",
       "      <td>72.047</td>\n",
       "      <td>2664659</td>\n",
       "      <td>6994.774861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>424</th>\n",
       "      <td>Djibouti</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1972</td>\n",
       "      <td>44.366</td>\n",
       "      <td>178848</td>\n",
       "      <td>3694.212352</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  country continent  year  lifeExp      pop    gdpPercap\n",
       "1557  Trinidad and Tobago  Americas  1997   69.465  1138101  8792.573126\n",
       "338           Congo, Rep.    Africa  1962   48.435  1047924  2464.783157\n",
       "449               Ecuador  Americas  1977   61.310  7278866  6679.623260\n",
       "790               Jamaica  Americas  2002   72.047  2664659  6994.774861\n",
       "424              Djibouti    Africa  1972   44.366   178848  3694.212352"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "5af22374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pop</th>\n",
       "      <th>lifeExp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8425333</td>\n",
       "      <td>28.801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9240934</td>\n",
       "      <td>30.332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10267083</td>\n",
       "      <td>31.997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11537966</td>\n",
       "      <td>34.020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13079460</td>\n",
       "      <td>36.088</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        pop  lifeExp\n",
       "0   8425333   28.801\n",
       "1   9240934   30.332\n",
       "2  10267083   31.997\n",
       "3  11537966   34.020\n",
       "4  13079460   36.088"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['pop','lifeExp']].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7b62498e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1699</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>1987</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          country  year\n",
       "5     Afghanistan  1977\n",
       "1699     Zimbabwe  1987"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[[5,1699],['country','year']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "54cbf90a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>pop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2002</td>\n",
       "      <td>25268405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1992</td>\n",
       "      <td>3326498</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    year       pop\n",
       "10  2002  25268405\n",
       "20  1992   3326498"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[[10,20],['year','pop']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "0cdeab9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>pop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Angola</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1972</td>\n",
       "      <td>5894858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>Americas</td>\n",
       "      <td>1962</td>\n",
       "      <td>21283783</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      country continent  year       pop\n",
       "40     Angola    Africa  1972   5894858\n",
       "50  Argentina  Americas  1962  21283783"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[[40,50],['country','continent','year','pop']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "089d86c1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "e6ea7fdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "country      Afghanistan\n",
       "continent           Asia\n",
       "year                1967\n",
       "lifeExp            34.02\n",
       "pop             11537966\n",
       "gdpPercap     836.197138\n",
       "Name: 3, dtype: object"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4fbb42c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1704, 6)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "0908c381",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1703</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2007</td>\n",
       "      <td>43.487</td>\n",
       "      <td>12311143</td>\n",
       "      <td>469.709298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1701</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1997</td>\n",
       "      <td>46.809</td>\n",
       "      <td>11404948</td>\n",
       "      <td>792.449960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1699</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1987</td>\n",
       "      <td>62.351</td>\n",
       "      <td>9216418</td>\n",
       "      <td>706.157306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1697</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1977</td>\n",
       "      <td>57.674</td>\n",
       "      <td>6642107</td>\n",
       "      <td>685.587682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1695</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>1967</td>\n",
       "      <td>53.995</td>\n",
       "      <td>4995432</td>\n",
       "      <td>569.795071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1997</td>\n",
       "      <td>41.763</td>\n",
       "      <td>22227415</td>\n",
       "      <td>635.341351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1987</td>\n",
       "      <td>40.822</td>\n",
       "      <td>13867957</td>\n",
       "      <td>852.395945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1977</td>\n",
       "      <td>38.438</td>\n",
       "      <td>14880372</td>\n",
       "      <td>786.113360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "      <td>11537966</td>\n",
       "      <td>836.197138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "      <td>9240934</td>\n",
       "      <td>820.853030</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>852 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          country continent  year  lifeExp       pop   gdpPercap\n",
       "1703     Zimbabwe    Africa  2007   43.487  12311143  469.709298\n",
       "1701     Zimbabwe    Africa  1997   46.809  11404948  792.449960\n",
       "1699     Zimbabwe    Africa  1987   62.351   9216418  706.157306\n",
       "1697     Zimbabwe    Africa  1977   57.674   6642107  685.587682\n",
       "1695     Zimbabwe    Africa  1967   53.995   4995432  569.795071\n",
       "...           ...       ...   ...      ...       ...         ...\n",
       "9     Afghanistan      Asia  1997   41.763  22227415  635.341351\n",
       "7     Afghanistan      Asia  1987   40.822  13867957  852.395945\n",
       "5     Afghanistan      Asia  1977   38.438  14880372  786.113360\n",
       "3     Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "1     Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "\n",
       "[852 rows x 6 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[::-2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "49fc8218",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2002</td>\n",
       "      <td>42.129</td>\n",
       "      <td>25268405</td>\n",
       "      <td>726.734055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2007</td>\n",
       "      <td>43.828</td>\n",
       "      <td>31889923</td>\n",
       "      <td>974.580338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1952</td>\n",
       "      <td>55.230</td>\n",
       "      <td>1282697</td>\n",
       "      <td>1601.056136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1957</td>\n",
       "      <td>59.280</td>\n",
       "      <td>1476505</td>\n",
       "      <td>1942.284244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1962</td>\n",
       "      <td>64.820</td>\n",
       "      <td>1728137</td>\n",
       "      <td>2312.888958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1967</td>\n",
       "      <td>66.220</td>\n",
       "      <td>1984060</td>\n",
       "      <td>2760.196931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1972</td>\n",
       "      <td>67.690</td>\n",
       "      <td>2263554</td>\n",
       "      <td>3313.422188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1977</td>\n",
       "      <td>68.930</td>\n",
       "      <td>2509048</td>\n",
       "      <td>3533.003910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1982</td>\n",
       "      <td>70.420</td>\n",
       "      <td>2780097</td>\n",
       "      <td>3630.880722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1987</td>\n",
       "      <td>72.000</td>\n",
       "      <td>3075321</td>\n",
       "      <td>3738.932735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1992</td>\n",
       "      <td>71.581</td>\n",
       "      <td>3326498</td>\n",
       "      <td>2497.437901</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        country continent  year  lifeExp       pop    gdpPercap\n",
       "10  Afghanistan      Asia  2002   42.129  25268405   726.734055\n",
       "11  Afghanistan      Asia  2007   43.828  31889923   974.580338\n",
       "12      Albania    Europe  1952   55.230   1282697  1601.056136\n",
       "13      Albania    Europe  1957   59.280   1476505  1942.284244\n",
       "14      Albania    Europe  1962   64.820   1728137  2312.888958\n",
       "15      Albania    Europe  1967   66.220   1984060  2760.196931\n",
       "16      Albania    Europe  1972   67.690   2263554  3313.422188\n",
       "17      Albania    Europe  1977   68.930   2509048  3533.003910\n",
       "18      Albania    Europe  1982   70.420   2780097  3630.880722\n",
       "19      Albania    Europe  1987   72.000   3075321  3738.932735\n",
       "20      Albania    Europe  1992   71.581   3326498  2497.437901"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[10:20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a99937ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1952</td>\n",
       "      <td>28.801</td>\n",
       "      <td>8425333</td>\n",
       "      <td>779.445314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "      <td>9240934</td>\n",
       "      <td>820.853030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1962</td>\n",
       "      <td>31.997</td>\n",
       "      <td>10267083</td>\n",
       "      <td>853.100710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "      <td>11537966</td>\n",
       "      <td>836.197138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1972</td>\n",
       "      <td>36.088</td>\n",
       "      <td>13079460</td>\n",
       "      <td>739.981106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1977</td>\n",
       "      <td>38.438</td>\n",
       "      <td>14880372</td>\n",
       "      <td>786.113360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1982</td>\n",
       "      <td>39.854</td>\n",
       "      <td>12881816</td>\n",
       "      <td>978.011439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1987</td>\n",
       "      <td>40.822</td>\n",
       "      <td>13867957</td>\n",
       "      <td>852.395945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1992</td>\n",
       "      <td>41.674</td>\n",
       "      <td>16317921</td>\n",
       "      <td>649.341395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1997</td>\n",
       "      <td>41.763</td>\n",
       "      <td>22227415</td>\n",
       "      <td>635.341351</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       country continent  year  lifeExp       pop   gdpPercap\n",
       "0  Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
       "1  Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2  Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3  Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4  Afghanistan      Asia  1972   36.088  13079460  739.981106\n",
       "5  Afghanistan      Asia  1977   38.438  14880372  786.113360\n",
       "6  Afghanistan      Asia  1982   39.854  12881816  978.011439\n",
       "7  Afghanistan      Asia  1987   40.822  13867957  852.395945\n",
       "8  Afghanistan      Asia  1992   41.674  16317921  649.341395\n",
       "9  Afghanistan      Asia  1997   41.763  22227415  635.341351"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[0:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "bf9c8edb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Afghanistan', 'Albania', 'Algeria', 'Angola', 'Argentina',\n",
       "       'Australia', 'Austria', 'Bahrain', 'Bangladesh', 'Belgium',\n",
       "       'Benin', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil',\n",
       "       'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon',\n",
       "       'Canada', 'Central African Republic', 'Chad', 'Chile', 'China',\n",
       "       'Colombia', 'Comoros', 'Congo, Dem. Rep.', 'Congo, Rep.',\n",
       "       'Costa Rica', \"Cote d'Ivoire\", 'Croatia', 'Cuba', 'Czech Republic',\n",
       "       'Denmark', 'Djibouti', 'Dominican Republic', 'Ecuador', 'Egypt',\n",
       "       'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Ethiopia',\n",
       "       'Finland', 'France', 'Gabon', 'Gambia', 'Germany', 'Ghana',\n",
       "       'Greece', 'Guatemala', 'Guinea', 'Guinea-Bissau', 'Haiti',\n",
       "       'Honduras', 'Hong Kong, China', 'Hungary', 'Iceland', 'India',\n",
       "       'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy',\n",
       "       'Jamaica', 'Japan', 'Jordan', 'Kenya', 'Korea, Dem. Rep.',\n",
       "       'Korea, Rep.', 'Kuwait', 'Lebanon', 'Lesotho', 'Liberia', 'Libya',\n",
       "       'Madagascar', 'Malawi', 'Malaysia', 'Mali', 'Mauritania',\n",
       "       'Mauritius', 'Mexico', 'Mongolia', 'Montenegro', 'Morocco',\n",
       "       'Mozambique', 'Myanmar', 'Namibia', 'Nepal', 'Netherlands',\n",
       "       'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Norway', 'Oman',\n",
       "       'Pakistan', 'Panama', 'Paraguay', 'Peru', 'Philippines', 'Poland',\n",
       "       'Portugal', 'Puerto Rico', 'Reunion', 'Romania', 'Rwanda',\n",
       "       'Sao Tome and Principe', 'Saudi Arabia', 'Senegal', 'Serbia',\n",
       "       'Sierra Leone', 'Singapore', 'Slovak Republic', 'Slovenia',\n",
       "       'Somalia', 'South Africa', 'Spain', 'Sri Lanka', 'Sudan',\n",
       "       'Swaziland', 'Sweden', 'Switzerland', 'Syria', 'Taiwan',\n",
       "       'Tanzania', 'Thailand', 'Togo', 'Trinidad and Tobago', 'Tunisia',\n",
       "       'Turkey', 'Uganda', 'United Kingdom', 'United States', 'Uruguay',\n",
       "       'Venezuela', 'Vietnam', 'West Bank and Gaza', 'Yemen, Rep.',\n",
       "       'Zambia', 'Zimbabwe'], dtype=object)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['country'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "5392190c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1992</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        country  year\n",
       "10  Afghanistan  2002\n",
       "12      Albania  1952\n",
       "14      Albania  1962\n",
       "16      Albania  1972\n",
       "18      Albania  1982\n",
       "20      Albania  1992"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[10:20:2,['country','year']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "b9e265d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>pop</th>\n",
       "      <th>gdpPercap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "      <td>9240934</td>\n",
       "      <td>820.853030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1962</td>\n",
       "      <td>31.997</td>\n",
       "      <td>10267083</td>\n",
       "      <td>853.100710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "      <td>11537966</td>\n",
       "      <td>836.197138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1972</td>\n",
       "      <td>36.088</td>\n",
       "      <td>13079460</td>\n",
       "      <td>739.981106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       country continent  year  lifeExp       pop   gdpPercap\n",
       "1  Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2  Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3  Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4  Afghanistan      Asia  1972   36.088  13079460  739.981106"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[1:5:1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "a1083b76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>lifeExp</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>28.801</td>\n",
       "      <td>1952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>30.332</td>\n",
       "      <td>1957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>31.997</td>\n",
       "      <td>1962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>34.020</td>\n",
       "      <td>1967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>36.088</td>\n",
       "      <td>1972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>38.438</td>\n",
       "      <td>1977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>39.854</td>\n",
       "      <td>1982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>40.822</td>\n",
       "      <td>1987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>41.674</td>\n",
       "      <td>1992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>41.763</td>\n",
       "      <td>1997</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       country  lifeExp  year\n",
       "0  Afghanistan   28.801  1952\n",
       "1  Afghanistan   30.332  1957\n",
       "2  Afghanistan   31.997  1962\n",
       "3  Afghanistan   34.020  1967\n",
       "4  Afghanistan   36.088  1972\n",
       "5  Afghanistan   38.438  1977\n",
       "6  Afghanistan   39.854  1982\n",
       "7  Afghanistan   40.822  1987\n",
       "8  Afghanistan   41.674  1992\n",
       "9  Afghanistan   41.763  1997"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[0:10,[0,3,2]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12b50e6f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6222cc5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['country', 'continent', 'year', 'lifeExp', 'pop', 'gdpPercap'], dtype='object')"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "860646de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>lifeExp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1952</td>\n",
       "      <td>28.801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1957</td>\n",
       "      <td>30.332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1962</td>\n",
       "      <td>31.997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1967</td>\n",
       "      <td>34.020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1972</td>\n",
       "      <td>36.088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1699</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>1987</td>\n",
       "      <td>62.351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1700</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>1992</td>\n",
       "      <td>60.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1701</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>1997</td>\n",
       "      <td>46.809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1702</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2002</td>\n",
       "      <td>39.989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1703</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2007</td>\n",
       "      <td>43.487</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1704 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          country  year  lifeExp\n",
       "0     Afghanistan  1952   28.801\n",
       "1     Afghanistan  1957   30.332\n",
       "2     Afghanistan  1962   31.997\n",
       "3     Afghanistan  1967   34.020\n",
       "4     Afghanistan  1972   36.088\n",
       "...           ...   ...      ...\n",
       "1699     Zimbabwe  1987   62.351\n",
       "1700     Zimbabwe  1992   60.377\n",
       "1701     Zimbabwe  1997   46.809\n",
       "1702     Zimbabwe  2002   39.989\n",
       "1703     Zimbabwe  2007   43.487\n",
       "\n",
       "[1704 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['country','year','lifeExp']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "034c37a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of           country continent  year  lifeExp       pop   gdpPercap\n",
       "0     Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
       "1     Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2     Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3     Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4     Afghanistan      Asia  1972   36.088  13079460  739.981106\n",
       "...           ...       ...   ...      ...       ...         ...\n",
       "1699     Zimbabwe    Africa  1987   62.351   9216418  706.157306\n",
       "1700     Zimbabwe    Africa  1992   60.377  10704340  693.420786\n",
       "1701     Zimbabwe    Africa  1997   46.809  11404948  792.449960\n",
       "1702     Zimbabwe    Africa  2002   39.989  11926563  672.038623\n",
       "1703     Zimbabwe    Africa  2007   43.487  12311143  469.709298\n",
       "\n",
       "[1704 rows x 6 columns]>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0cdd9219",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.tail of           country continent  year  lifeExp       pop   gdpPercap\n",
       "0     Afghanistan      Asia  1952   28.801   8425333  779.445314\n",
       "1     Afghanistan      Asia  1957   30.332   9240934  820.853030\n",
       "2     Afghanistan      Asia  1962   31.997  10267083  853.100710\n",
       "3     Afghanistan      Asia  1967   34.020  11537966  836.197138\n",
       "4     Afghanistan      Asia  1972   36.088  13079460  739.981106\n",
       "...           ...       ...   ...      ...       ...         ...\n",
       "1699     Zimbabwe    Africa  1987   62.351   9216418  706.157306\n",
       "1700     Zimbabwe    Africa  1992   60.377  10704340  693.420786\n",
       "1701     Zimbabwe    Africa  1997   46.809  11404948  792.449960\n",
       "1702     Zimbabwe    Africa  2002   39.989  11926563  672.038623\n",
       "1703     Zimbabwe    Africa  2007   43.487  12311143  469.709298\n",
       "\n",
       "[1704 rows x 6 columns]>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0cbae30b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1704"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4bd54bfb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "0e7462d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "0074a0f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "4147eb9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dataset</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I</td>\n",
       "      <td>10.0</td>\n",
       "      <td>8.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>I</td>\n",
       "      <td>13.0</td>\n",
       "      <td>7.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I</td>\n",
       "      <td>11.0</td>\n",
       "      <td>8.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>I</td>\n",
       "      <td>14.0</td>\n",
       "      <td>9.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>I</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>I</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>I</td>\n",
       "      <td>12.0</td>\n",
       "      <td>10.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>I</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>I</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>II</td>\n",
       "      <td>10.0</td>\n",
       "      <td>9.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>II</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>II</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>II</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>II</td>\n",
       "      <td>11.0</td>\n",
       "      <td>9.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>II</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>II</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>II</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>II</td>\n",
       "      <td>12.0</td>\n",
       "      <td>9.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>II</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>II</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>III</td>\n",
       "      <td>10.0</td>\n",
       "      <td>7.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>III</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>III</td>\n",
       "      <td>13.0</td>\n",
       "      <td>12.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>III</td>\n",
       "      <td>9.0</td>\n",
       "      <td>7.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>III</td>\n",
       "      <td>11.0</td>\n",
       "      <td>7.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>III</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>III</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>III</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>III</td>\n",
       "      <td>12.0</td>\n",
       "      <td>8.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>III</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>III</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>IV</td>\n",
       "      <td>19.0</td>\n",
       "      <td>12.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.89</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dataset     x      y\n",
       "0        I  10.0   8.04\n",
       "1        I   8.0   6.95\n",
       "2        I  13.0   7.58\n",
       "3        I   9.0   8.81\n",
       "4        I  11.0   8.33\n",
       "5        I  14.0   9.96\n",
       "6        I   6.0   7.24\n",
       "7        I   4.0   4.26\n",
       "8        I  12.0  10.84\n",
       "9        I   7.0   4.82\n",
       "10       I   5.0   5.68\n",
       "11      II  10.0   9.14\n",
       "12      II   8.0   8.14\n",
       "13      II  13.0   8.74\n",
       "14      II   9.0   8.77\n",
       "15      II  11.0   9.26\n",
       "16      II  14.0   8.10\n",
       "17      II   6.0   6.13\n",
       "18      II   4.0   3.10\n",
       "19      II  12.0   9.13\n",
       "20      II   7.0   7.26\n",
       "21      II   5.0   4.74\n",
       "22     III  10.0   7.46\n",
       "23     III   8.0   6.77\n",
       "24     III  13.0  12.74\n",
       "25     III   9.0   7.11\n",
       "26     III  11.0   7.81\n",
       "27     III  14.0   8.84\n",
       "28     III   6.0   6.08\n",
       "29     III   4.0   5.39\n",
       "30     III  12.0   8.15\n",
       "31     III   7.0   6.42\n",
       "32     III   5.0   5.73\n",
       "33      IV   8.0   6.58\n",
       "34      IV   8.0   5.76\n",
       "35      IV   8.0   7.71\n",
       "36      IV   8.0   8.84\n",
       "37      IV   8.0   8.47\n",
       "38      IV   8.0   7.04\n",
       "39      IV   8.0   5.25\n",
       "40      IV  19.0  12.50\n",
       "41      IV   8.0   5.56\n",
       "42      IV   8.0   7.91\n",
       "43      IV   8.0   6.89"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=sns.load_dataset(\"anscombe\")#accesing anscombe dataset from the seaborn library\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "44187c32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dataset</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I</td>\n",
       "      <td>10.0</td>\n",
       "      <td>8.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>I</td>\n",
       "      <td>13.0</td>\n",
       "      <td>7.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I</td>\n",
       "      <td>11.0</td>\n",
       "      <td>8.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>I</td>\n",
       "      <td>14.0</td>\n",
       "      <td>9.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>I</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>I</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>I</td>\n",
       "      <td>12.0</td>\n",
       "      <td>10.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>I</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>I</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.68</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dataset     x      y\n",
       "0        I  10.0   8.04\n",
       "1        I   8.0   6.95\n",
       "2        I  13.0   7.58\n",
       "3        I   9.0   8.81\n",
       "4        I  11.0   8.33\n",
       "5        I  14.0   9.96\n",
       "6        I   6.0   7.24\n",
       "7        I   4.0   4.26\n",
       "8        I  12.0  10.84\n",
       "9        I   7.0   4.82\n",
       "10       I   5.0   5.68"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#we are conditionally taken as dataset and separated the information of roman one\n",
    "dataset_1=df[df['dataset']=='I']\n",
    "dataset_1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "79a01fdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x89a6cd0>]"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "plt.plot(dataset_1['x'],dataset_1['y'],'o')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "3962743e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dataset</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>II</td>\n",
       "      <td>10.0</td>\n",
       "      <td>9.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>II</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>II</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>II</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>II</td>\n",
       "      <td>11.0</td>\n",
       "      <td>9.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>II</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>II</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>II</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>II</td>\n",
       "      <td>12.0</td>\n",
       "      <td>9.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>II</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>II</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.74</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dataset     x     y\n",
       "11      II  10.0  9.14\n",
       "12      II   8.0  8.14\n",
       "13      II  13.0  8.74\n",
       "14      II   9.0  8.77\n",
       "15      II  11.0  9.26\n",
       "16      II  14.0  8.10\n",
       "17      II   6.0  6.13\n",
       "18      II   4.0  3.10\n",
       "19      II  12.0  9.13\n",
       "20      II   7.0  7.26\n",
       "21      II   5.0  4.74"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_2=df[df['dataset']=='II']\n",
    "dataset_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "2179a0a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x8a573b8>]"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset_2=df[df['dataset']=='II']\n",
    "dataset_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "739a7c8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dataset</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>III</td>\n",
       "      <td>10.0</td>\n",
       "      <td>7.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>III</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>III</td>\n",
       "      <td>13.0</td>\n",
       "      <td>12.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>III</td>\n",
       "      <td>9.0</td>\n",
       "      <td>7.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>III</td>\n",
       "      <td>11.0</td>\n",
       "      <td>7.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>III</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>III</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>III</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>III</td>\n",
       "      <td>12.0</td>\n",
       "      <td>8.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>III</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>III</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.73</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dataset     x      y\n",
       "22     III  10.0   7.46\n",
       "23     III   8.0   6.77\n",
       "24     III  13.0  12.74\n",
       "25     III   9.0   7.11\n",
       "26     III  11.0   7.81\n",
       "27     III  14.0   8.84\n",
       "28     III   6.0   6.08\n",
       "29     III   4.0   5.39\n",
       "30     III  12.0   8.15\n",
       "31     III   7.0   6.42\n",
       "32     III   5.0   5.73"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_3=df[df['dataset']=='III']\n",
    "dataset_3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "db5857c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0xea1ac70>]"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAATkAAAD4CAYAAACXIpFUAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAPM0lEQVR4nO3dbYxcZ3nG8f/VuHR3I5YAWWJDSI1alFZEBcIIQV9i2gANbUQQKhLYtKFFtawi3tSqglYqkq22VEVqUWu5siAkUiH9kDqCIhUlSkUjSzjSOgRwCCWqTYKDXxZBaBUc0eC7H2ZQHGcdr2fO7sw8+/9Jq/MyM+fcR/Ze+8w5z3lOqgpJatVPjbsASVpNhpykphlykppmyElqmiEnqWkb1nJnl156aW3evHktdylpHTh48OB3q2phudfWNOQ2b97M4uLiWu5S0jqQ5KFzvXber6tJbkpyMsmhM9a9Lcn9SU4n6XVVqCR1bSXn5G4Grjtr3SHgrcDdXRckSV0679fVqro7yeaz1j0AkGSVypKkbqz61dUk25MsJllcWlpa7d1J0lOseshV1d6q6lVVb2Fh2YsfkrRq7CcnNeDYMdiyBY4fH3clk8eQkxqwaxfs3w87d467ksmT8w21lORW4HXApcAJ4CPA94B/ABaAR4H7quo3z7ezXq9X9pOTujM7C48//vT1MzNw6tTa1zMuSQ5W1bLd2c7bkquqd1TVpqr66aq6vKo+WVW3D+Z/pqouW0nASere4cOwdSvMzfWX5+Zg2zY4cmS8dU0Sv65KU2zTJpif77fmZmb60/l52Lhx3JVNDkNOmnInTsCOHXDgQH/qxYenWtN7VyV1b9++J+d37x5fHZPKlpykphlykppmyElqmiEnqWmGnKSmGXKSmmbISWqaISepaYacpKYZcpKaZshJapohJ6lphpykphlykppmyElqmiEnqWmGnKSmGXKSmnbekEtyU5KTSQ6dse55Se5M8uBg+tzVLVOShrOSltzNwHVnrfsQcFdVvRS4a7AsSRNnJc9dvZv+w6TPdANwy2D+FuAt3ZYlaT06dgy2bOn2iWPDnpO7rKqODeaPA5ed641JtidZTLK4tLQ05O4krQe7dsH+/bBzZ3fbTFWd/03JZuDzVXXVYPnRqrrkjNe/X1XnPS/X6/VqcXFx+GolNWl2tv9g7LPNzMCpU+f/fJKDVdVb7rVhW3InkmwabHwTcHLI7UgShw/D1q0wN9dfnpuDbdvgyJHRtz1syH0OuHEwfyPw2dFLkbRebdoE8/P91tzMTH86Pw8bN46+7ZV0IbkV+BJwZZKjSd4NfBR4Q5IHgdcPliVpaCdOwI4dcOBAf9rVxYcVnZPriufkJK2G1TgnJ0lTwZCT1DRDTlLTDDlJTTPkJDXNkJPUNENOUtMMOUlNM+QkNc2Qk9Q0Q05S0ww5SU0z5CQ1zZCT1DRDTlLTDDlJTTPkJDXNkJPUNENOUtMMOUlNM+QkNW2kkEvy/iSHktyf5AMd1SRJnRk65JJcBfwh8Grg5cD1SX6+q8IkqQujtOR+Ebinqn5YVU8A/wm8tZuyJKkbo4TcIeDXkjw/yRzwW8CLuylLkrqxYdgPVtUDSf4GuAN4DLgP+PHZ70uyHdgOcMUVVwy7O0kaykgXHqrqk1X1qqq6Bvg+8M1l3rO3qnpV1VtYWBhld5J0wUa9uvqCwfQK+ufjPtNFUVrfjh2DLVvg+PFxV6IWjNpP7l+TfB34N+A9VfXo6CVpvdu1C/bvh507x12JWpCqWrOd9Xq9WlxcXLP9abrMzsLjjz99/cwMnDq19vVoeiQ5WFW95V7zjgdNjMOHYetWmJvrL8/NwbZtcOTIeOvSdDPkNDE2bYL5+X5rbmamP52fh40bx12Zppkhp4ly4gTs2AEHDvSnXnzQqIbuJyethn37npzfvXt8dagdtuQkNc2Qk9Q0Q05S0ww5SU0z5CQ1zZCT1DRDTlLTDDlJTTPkpFXksFHjZ8hJq8hho8bPkJNWwewsJLBnD5w+3Z8m/fVaW4actAocNmpyGHLSKnDYqMlhyEmrxGGjJoNDLUmrxGGjJoMtOUlNM+S0btmHbX0Y9bmrH0xyf5JDSW5NMtNVYdJqsw/b+jB0yCV5EfA+oFdVVwEXAW/vqjBptdiHbX0Z9evqBmA2yQZgDvjO6CVJq8s+bOvL0CFXVY8AHwMeBo4BP6iqO7oqTFot9mFbX0b5uvpc4AbgJcALgYuTvHOZ921PsphkcWlpafhKpQ7Zh239SFUN98HkbcB1VfXuwfLvAa+pqj8612d6vV4tLi4OtT9JOpckB6uqt9xro5yTexh4TZK5JAGuBR4YYXuS1LlRzsndA9wG3At8bbCtvR3VJUmdGOm2rqr6CPCRjmqRpM55x4OkphlykppmyElqmiEnqWmGnKQVmdZRWww5SSsyraO2GHKSntG0j9piyEl6RtM+aoshJ+kZTfuoLYacpPOa5lFbfFqXpPOa5ieP2ZKT1DRDTlLTDDlJTTPk1sC09hSXWmDIrYFp7SkutcCQW0XT3lNcaoEht4qmvae41AJDbhVNe09xqQWG3Cqb5p7iUgu842GVTXNPcakFQ7fkklyZ5L4zfv4nyQc6rE2SRjZ0S66q/gt4BUCSi4BHgNu7KUuSutHVOblrgf+uqoc62p4mlB2bNW26Crm3A7d2tC1NMDs2a9qkqkbbQPIs4DvAy6rqxDKvbwe2A1xxxRWveughG3vTaHa23wXmbDMzcOrU2tcjnSnJwarqLfdaFy25NwH3LhdwAFW1t6p6VdVbWFjoYHcaBzs2a1p1EXLvwK+qzbNjs6bVSCGX5GLgDcC+871X08+OzZpGI3UGrqrHgOd3VIsmnB2bNY28rUtS0ww5SU0z5CQ1zZCT1DRDTlLTDDlJTTPkJDXNkJPUNENOUtMMOUlNM+QkNc2Qk9Q0Q05S0ww5SU0z5CQ1zZCT1DRDTlLTDDlJTTPkJDXNkJPUNENOUtNGfSThJUluS/KNJA8keW1XhUlSF0Z6JCHwceALVfU7SZ4FzHVQkyR1ZuiQS/Ic4BrgXQBV9SPgR92UJUndGOXr6kuAJeBTSb6c5BNJLu6oLknqxCghtwG4GthTVa8EHgM+dPabkmxPsphkcWlpaYTdSdKFGyXkjgJHq+qewfJt9EPvKapqb1X1qqq3sLAwwu4k6cINHXJVdRz4dpIrB6uuBb7eSVWS1JFRr66+F/j04MrqYeD3Ry9JkrozUshV1X1Ar5tSJKl73vEgqWnrPuSOHYMtW+D48XFXImk1rPuQ27UL9u+HnTvHXYmk1bBuQ252FhLYswdOn+5Pk/56Se1YtyF3+DBs3Qpzg7tt5+Zg2zY4cmS8dUnq1roNuU2bYH4eHn8cZmb60/l52Lhx3JVJ6tK6DTmAEydgxw44cKA/9eKD1J5ROwNPtX37npzfvXt8dUhaPeu6JSepfYacpKYZcpKaZshJapohJ6lphpykphlykppmyElqmiEnqWmGnKSmGXKSmmbISWqaISepaYacpKaNNNRSkm8B/wv8GHiiqnw8oaSJ0sV4cr9eVd/tYDuS1Dm/rkpq2qghV8AdSQ4m2b7cG5JsT7KYZHFpaWnE3UnShRk15H61qq4G3gS8J8k1Z7+hqvZWVa+qegsLCyPuTpIuzEghV1WPDKYngduBV3dRlIZz7Bhs2eIDeaQzDR1ySS5O8uyfzANvBA51VZgu3K5dsH8/7Nw57kqkyTHK1dXLgNuT/GQ7n6mqL3RSlS7I7Gz/ubE/sWdP/2dmBk6dGl9d0iQYuiVXVYer6uWDn5dV1V92WZhW7vBh2LoV5ub6y3NzsG0bHDky3rqkSWAXkgZs2gTz8/3W3MxMfzo/Dxs3jrsyafwMuUacOAE7dsCBA/2pFx+kvi7ueNAE2Lfvyfndu8dXhzRpbMlJapohJ6lphpykphlykppmyElqmiEnqWmGnKSmGXKSmmbISWqaISepaRMdcg4CKWlUEx1yDgIpaVQTGXKzs5D0B348fbo/TfrrJelCTGTIOQikpK5MZMg5CKSkrkxkyIGDQErqxsQOmukgkJK6MLEtOUnqwsghl+SiJF9O8vkuCpKkLnXRkns/8EAH25Gkzo0UckkuB34b+EQ35UhSt0Ztyf098KfA6XO9Icn2JItJFpeWlkbcnSRdmKFDLsn1wMmqOvhM76uqvVXVq6rewsLCsLuTpKGkqob7YPLXwO8CTwAzwDywr6re+QyfWQIeusBdXQp8d6giJ0srxwEey6Rq5ViGOY6fraplW1FDh9xTNpK8DviTqrp+5I09fduLVdXrertrrZXjAI9lUrVyLF0fh/3kJDWtkzsequqLwBe72JYkdWkaWnJ7x11AR1o5DvBYJlUrx9LpcXRyTk6SJtU0tOQkaWiGnKSmTXTItXLzf5JLktyW5BtJHkjy2nHXNKwkH0xyf5JDSW5NMjPumlYqyU1JTiY5dMa65yW5M8mDg+lzx1njSpzjOP528P/rq0luT3LJGEtcseWO5YzX/jhJJbl0lH1MdMjRzs3/Hwe+UFW/ALycKT2mJC8C3gf0quoq4CLg7eOt6oLcDFx31roPAXdV1UuBuwbLk+5mnn4cdwJXVdUvAd8EPrzWRQ3pZp5+LCR5MfBG4OFRdzCxIdfKzf9JngNcA3wSoKp+VFWPjrWo0WwAZpNsAOaA74y5nhWrqruB7521+gbglsH8LcBb1rKmYSx3HFV1R1U9MVg8AFy+5oUN4Rz/JgB/R/+++JGvjE5syLGCm/+nxEuAJeBTg6/en0hy8biLGkZVPQJ8jP5f12PAD6rqjvFWNbLLqurYYP44cNk4i+nIHwD/Pu4ihpXkBuCRqvpKF9ubyJBb6c3/U2IDcDWwp6peCTzGdHwleprB+aob6Af3C4GLk5zzXuVpU/3+VFPdpyrJn9O/n/zT465lGEnmgD8D/qKrbU5kyAG/Arw5ybeAfwF+I8k/j7ekoR0FjlbVPYPl2+iH3jR6PXCkqpaq6v+AfcAvj7mmUZ1IsglgMD055nqGluRdwPXAtpreDrA/R/+P6FcGv/+XA/cmGfpZfRMZclX14aq6vKo20z+x/R/PNLrJJKuq48C3k1w5WHUt8PUxljSKh4HXJJlLEvrHMpUXUc7wOeDGwfyNwGfHWMvQklxH//TOm6vqh+OuZ1hV9bWqekFVbR78/h8Frh78Hg1lIkOuQe8FPp3kq8ArgL8abznDGbRGbwPuBb5G///P1NxKlORW4EvAlUmOJnk38FHgDUkepN9S/eg4a1yJcxzHPwLPBu5Mcl+SfxprkSt0jmPpdh/T26qVpPOzJSepaYacpKYZcpKaZshJapohJ6lphpykphlykpr2/8fdZhpD3Bn7AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 360x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "plt.plot(dataset_1['x'],dataset_1['y'],'b*')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "d9d44f07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dataset</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>IV</td>\n",
       "      <td>19.0</td>\n",
       "      <td>12.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>IV</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.89</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dataset     x      y\n",
       "33      IV   8.0   6.58\n",
       "34      IV   8.0   5.76\n",
       "35      IV   8.0   7.71\n",
       "36      IV   8.0   8.84\n",
       "37      IV   8.0   8.47\n",
       "38      IV   8.0   7.04\n",
       "39      IV   8.0   5.25\n",
       "40      IV  19.0  12.50\n",
       "41      IV   8.0   5.56\n",
       "42      IV   8.0   7.91\n",
       "43      IV   8.0   6.89"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_4=df[df['dataset']=='IV']\n",
    "dataset_4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "afd0c65c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0xea54b20>]"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "plt.plot(dataset_4['x'],dataset_4['y'],'r*')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "35100013",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure(figsize=(5,5))\n",
    "axes1=fig.add_subplot(2,2,1)\n",
    "axes2=fig.add_subplot(2,2,2)\n",
    "axes3=fig.add_subplot(2,2,3)\n",
    "axes4=fig.add_subplot(2,2,4)\n",
    "\n",
    "axes1.plot(dataset_1['x'],dataset_1['y'],'o')\n",
    "axes2.plot(dataset_2['x'],dataset_2['y'],'r*')\n",
    "axes3.plot(dataset_3['x'],dataset_3['y'],'r*')\n",
    "axes4.plot(dataset_4['x'],dataset_4['y'],'b*')\n",
    "\n",
    "axes1.set_title(\"dataset_1\")\n",
    "axes2.set_title(\"dataset_2\")\n",
    "axes3.set_title(\"dataset_3\")\n",
    "axes4.set_title(\"dataset_4\")\n",
    "\n",
    "fig.suptitle(\"anscombe dataset plot\")\n",
    "fig.tight_layout()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "9ca115d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_bill</th>\n",
       "      <th>tip</th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16.99</td>\n",
       "      <td>1.01</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.34</td>\n",
       "      <td>1.66</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21.01</td>\n",
       "      <td>3.50</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23.68</td>\n",
       "      <td>3.31</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24.59</td>\n",
       "      <td>3.61</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>29.03</td>\n",
       "      <td>5.92</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>27.18</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>22.67</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>17.82</td>\n",
       "      <td>1.75</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>18.78</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Thur</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     total_bill   tip     sex smoker   day    time  size\n",
       "0         16.99  1.01  Female     No   Sun  Dinner     2\n",
       "1         10.34  1.66    Male     No   Sun  Dinner     3\n",
       "2         21.01  3.50    Male     No   Sun  Dinner     3\n",
       "3         23.68  3.31    Male     No   Sun  Dinner     2\n",
       "4         24.59  3.61  Female     No   Sun  Dinner     4\n",
       "..          ...   ...     ...    ...   ...     ...   ...\n",
       "239       29.03  5.92    Male     No   Sat  Dinner     3\n",
       "240       27.18  2.00  Female    Yes   Sat  Dinner     2\n",
       "241       22.67  2.00    Male    Yes   Sat  Dinner     2\n",
       "242       17.82  1.75    Male     No   Sat  Dinner     2\n",
       "243       18.78  3.00  Female     No  Thur  Dinner     2\n",
       "\n",
       "[244 rows x 7 columns]"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=sns.load_dataset(\"tips\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "206b36a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'total bill')"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure(figsize=(5,5))\n",
    "axes1=fig.add_subplot(1,1,1)\n",
    "axes1.hist(df['total_bill'],bins=10,color=\"black\",orientation=\"vertical\")\n",
    "axes1.set_title(\"histogram\")\n",
    "axes1.set_xlabel(\"frequency\")\n",
    "axes1.set_ylabel(\"total bill\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "002ff7e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_bill</th>\n",
       "      <th>tip</th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16.99</td>\n",
       "      <td>1.01</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.34</td>\n",
       "      <td>1.66</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21.01</td>\n",
       "      <td>3.50</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23.68</td>\n",
       "      <td>3.31</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24.59</td>\n",
       "      <td>3.61</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Sun</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>29.03</td>\n",
       "      <td>5.92</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>27.18</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>22.67</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>17.82</td>\n",
       "      <td>1.75</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Sat</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>18.78</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>Thur</td>\n",
       "      <td>Dinner</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     total_bill   tip     sex smoker   day    time  size\n",
       "0         16.99  1.01  Female     No   Sun  Dinner     2\n",
       "1         10.34  1.66    Male     No   Sun  Dinner     3\n",
       "2         21.01  3.50    Male     No   Sun  Dinner     3\n",
       "3         23.68  3.31    Male     No   Sun  Dinner     2\n",
       "4         24.59  3.61  Female     No   Sun  Dinner     4\n",
       "..          ...   ...     ...    ...   ...     ...   ...\n",
       "239       29.03  5.92    Male     No   Sat  Dinner     3\n",
       "240       27.18  2.00  Female    Yes   Sat  Dinner     2\n",
       "241       22.67  2.00    Male    Yes   Sat  Dinner     2\n",
       "242       17.82  1.75    Male     No   Sat  Dinner     2\n",
       "243       18.78  3.00  Female     No  Thur  Dinner     2\n",
       "\n",
       "[244 rows x 7 columns]"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c35f5e69",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
